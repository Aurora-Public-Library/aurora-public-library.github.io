"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.composeViewAvailabilityEvent = composeViewAvailabilityEvent;
exports.default = void 0;

var _constantsAnalytics = _interopRequireDefault(require("@bibliocommons/constants-analytics"));

var _compose = require("./compose");

var CATEGORIES = _constantsAnalytics.default.CATEGORIES,
    EVENTS = _constantsAnalytics.default.EVENTS,
    ACTIONS = _constantsAnalytics.default.ACTIONS;

function composeAvailabilityEvent(_ref) {
  var eventName = _ref.eventName,
      gtmValue = _ref.gtmValue,
      gtmAction = _ref.gtmAction,
      gtmLabel = _ref.gtmLabel,
      reciprocalRank = _ref.reciprocalRank,
      metadataIds = _ref.metadataIds;
  return (0, _compose.composeEvent)(eventName, {
    gtmValue: gtmValue,
    gtmAction: gtmAction,
    gtmCategory: CATEGORIES.AVAILABILITY,
    gtmLabel: gtmLabel,
    reciprocalRank: reciprocalRank,
    metadataIds: metadataIds
  });
}

function composeViewAvailabilityEvent(_ref2) {
  var status = _ref2.status,
      reciprocalRank = _ref2.reciprocalRank,
      metadataId = _ref2.metadataId;
  return (0, _compose.composeAnalytics)([composeAvailabilityEvent({
    eventName: EVENTS.CHECK_AVAILABILITY,
    gtmValue: 1,
    gtmAction: ACTIONS.VIEW,
    gtmLabel: status && status.toLowerCase(),
    reciprocalRank: reciprocalRank,
    metadataIds: [metadataId]
  })]);
}

var _default = {
  composeViewAvailabilityEvent: composeViewAvailabilityEvent
};
exports.default = _default;