"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.composeAuthorClickEvent = composeAuthorClickEvent;
exports.composeImageClickEvent = composeImageClickEvent;
exports.composeRelatedAuthorLinkClickEvent = composeRelatedAuthorLinkClickEvent;
exports.composeSimilarAuthorLinkClickEvent = composeSimilarAuthorLinkClickEvent;
exports.composeTitleClickEvent = composeTitleClickEvent;
exports.default = void 0;

var _constantsAnalytics = _interopRequireDefault(require("@bibliocommons/constants-analytics"));

var _compose = require("./compose");

var EVENTS = _constantsAnalytics.default.EVENTS,
    CATEGORIES = _constantsAnalytics.default.CATEGORIES,
    ACTIONS = _constantsAnalytics.default.ACTIONS,
    LABELS = _constantsAnalytics.default.LABELS,
    CUSTOM_DIMENSIONS = _constantsAnalytics.default.CUSTOM_DIMENSIONS;
var CONTENT_TYPES = CUSTOM_DIMENSIONS.CONTENT_TYPES;

function composeTitleClickEvent(_ref) {
  var containerName = _ref.containerName,
      reciprocalRank = _ref.reciprocalRank,
      metadataId = _ref.metadataId;
  return (0, _compose.composeAnalytics)([(0, _compose.composeEvent)(EVENTS.BIB_TITLE_CLICK, {
    gtmCategory: CATEGORIES.BIB_COMPONENT,
    gtmAction: ACTIONS.CLICK_TITLE,
    gtmLabel: LABELS.BIB_TITLE,
    gtmValue: 1,
    gtmContainerName: containerName,
    gtmContentType: CONTENT_TYPES.BIB,
    reciprocalRank: reciprocalRank,
    metadataIds: [metadataId]
  })]);
}

function composeAuthorClickEvent(_ref2) {
  var containerName = _ref2.containerName,
      reciprocalRank = _ref2.reciprocalRank,
      metadataId = _ref2.metadataId;
  return (0, _compose.composeAnalytics)([(0, _compose.composeEvent)(EVENTS.BIB_AUTHOR_CLICK, {
    gtmCategory: CATEGORIES.BIB_COMPONENT,
    gtmAction: ACTIONS.CLICK_LINK,
    gtmLabel: LABELS.BIB_AUTHOR,
    gtmValue: 1,
    gtmContainerName: containerName,
    gtmContentType: CONTENT_TYPES.BIB,
    reciprocalRank: reciprocalRank,
    metadataIds: [metadataId]
  })]);
}

function composeSimilarAuthorLinkClickEvent(_ref3) {
  var containerName = _ref3.containerName,
      providerName = _ref3.providerName;
  return (0, _compose.composeAnalytics)([(0, _compose.composeEvent)(EVENTS.SIMILAR_AUTHOR_CLICK, {
    gtmCategory: CATEGORIES.BIB_METADATA,
    gtmAction: ACTIONS.CLICK_LINK,
    gtmLabel: LABELS.BIB_SIMILAR_AUTHOR,
    gtmValue: 1,
    gtmContainerName: containerName,
    gtmCreatorType: providerName
  })]);
}

function composeRelatedAuthorLinkClickEvent(_ref4) {
  var containerName = _ref4.containerName;
  return (0, _compose.composeAnalytics)([(0, _compose.composeEvent)(EVENTS.RELATED_AUTHOR_CLICK, {
    gtmCategory: CATEGORIES.BIB_METADATA,
    gtmAction: ACTIONS.CLICK_LINK,
    gtmLabel: LABELS.BIB_RELATED_AUTHOR,
    gtmValue: 1,
    gtmContainerName: containerName
  })]);
}

function composeImageClickEvent(_ref5) {
  var containerName = _ref5.containerName,
      reciprocalRank = _ref5.reciprocalRank,
      metadataId = _ref5.metadataId;
  return (0, _compose.composeAnalytics)([(0, _compose.composeEvent)(EVENTS.BIB_IMAGE_CLICK, {
    gtmCategory: CATEGORIES.BIB_COMPONENT,
    gtmAction: ACTIONS.CLICK_IMAGE,
    gtmLabel: LABELS.BIB_IMAGE,
    gtmValue: 1,
    gtmContainerName: containerName,
    gtmContentType: CONTENT_TYPES.BIB,
    reciprocalRank: reciprocalRank,
    metadataIds: [metadataId]
  })]);
}

var _default = {
  composeTitleClickEvent: composeTitleClickEvent,
  composeAuthorClickEvent: composeAuthorClickEvent,
  composeSimilarAuthorLinkClickEvent: composeSimilarAuthorLinkClickEvent,
  composeRelatedAuthorLinkClickEvent: composeRelatedAuthorLinkClickEvent,
  composeImageClickEvent: composeImageClickEvent
};
exports.default = _default;