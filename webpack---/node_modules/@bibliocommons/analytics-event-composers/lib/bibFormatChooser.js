"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _constantsAnalytics = _interopRequireDefault(require("@bibliocommons/constants-analytics"));

var _compose = require("./compose");

var CATEGORIES = _constantsAnalytics.default.CATEGORIES,
    EVENTS = _constantsAnalytics.default.EVENTS,
    ACTIONS = _constantsAnalytics.default.ACTIONS,
    LABELS = _constantsAnalytics.default.LABELS;

function composeFormatPickerExpandEvent(expand) {
  return (0, _compose.composeAnalytics)([(0, _compose.composeEvent)(EVENTS.FORMAT_CHOOSER_SELECTION, {
    gtmCategory: CATEGORIES.BIB_FORMAT_CHOOSER,
    gtmAction: ACTIONS.INTERACT_WITH_CONTAINER,
    gtmLabel: expand ? LABELS.CONTAINER_EXPAND : LABELS.CONTAINER_COLLAPSE,
    gtmValue: 1
  })]);
}

function composeFormatPickerSelectionEvent(label) {
  return (0, _compose.composeAnalytics)([(0, _compose.composeEvent)(EVENTS.FORMAT_CHOOSER_SELECTION, {
    gtmCategory: CATEGORIES.BIB_FORMAT_CHOOSER,
    gtmAction: ACTIONS.CLICK_LINK,
    gtmLabel: label,
    gtmValue: 1
  })]);
}

function composeFormatPickerViewAllEvent() {
  return (0, _compose.composeAnalytics)([(0, _compose.composeEvent)(EVENTS.FORMAT_CHOOSER_SELECTION, {
    gtmCategory: CATEGORIES.BIB_FORMAT_CHOOSER,
    gtmAction: ACTIONS.INTERACT_WITH_CONTAINER,
    gtmLabel: LABELS.CONTAINER_VIEW_ALL,
    gtmValue: 1
  })]);
}

var _default = {
  composeFormatPickerExpandEvent: composeFormatPickerExpandEvent,
  composeFormatPickerSelectionEvent: composeFormatPickerSelectionEvent,
  composeFormatPickerViewAllEvent: composeFormatPickerViewAllEvent
};
exports.default = _default;