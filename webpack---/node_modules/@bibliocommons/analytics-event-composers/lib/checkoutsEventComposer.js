"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.composeDigitalCheckoutEvent = composeDigitalCheckoutEvent;
exports.composeDownloadEvent = composeDownloadEvent;
exports.composePhysicalCheckoutEvent = composePhysicalCheckoutEvent;
exports.composeQuickRenewCheckoutsEvent = composeQuickRenewCheckoutsEvent;
exports.composeReadInBrowserEvent = composeReadInBrowserEvent;
exports.composeRenewCheckoutEvent = composeRenewCheckoutEvent;
exports.composeReturnEvent = composeReturnEvent;
exports.default = void 0;

var _constantsAnalytics = _interopRequireDefault(require("@bibliocommons/constants-analytics"));

var _compose = require("./compose");

var _getLabelForProvider = _interopRequireDefault(require("./getLabelForProvider"));

var EVENTS = _constantsAnalytics.default.EVENTS,
    CATEGORIES = _constantsAnalytics.default.CATEGORIES,
    ACTIONS = _constantsAnalytics.default.ACTIONS,
    CUSTOM_DIMENSIONS = _constantsAnalytics.default.CUSTOM_DIMENSIONS;

function composeCheckoutsEvent(_ref) {
  var event = _ref.event,
      gtmAction = _ref.gtmAction,
      gtmValue = _ref.gtmValue,
      gtmLabel = _ref.gtmLabel,
      gtmContainerName = _ref.gtmContainerName;
  return (0, _compose.composeEvent)(event, {
    gtmCategory: CATEGORIES.CHECKOUTS,
    gtmAction: gtmAction,
    gtmLabel: gtmLabel,
    gtmValue: gtmValue,
    gtmContainerName: gtmContainerName
  });
}

function composeItemCheckoutEvent(_ref2) {
  var event = _ref2.event,
      gtmAction = _ref2.gtmAction,
      gtmValue = _ref2.gtmValue,
      gtmLabel = _ref2.gtmLabel;
  return composeCheckoutsEvent({
    event: event,
    gtmAction: gtmAction,
    gtmLabel: gtmLabel,
    gtmValue: gtmValue,
    gtmContainerName: CUSTOM_DIMENSIONS.CONTAINER_NAMES.BIB_ITEM
  });
}

function composeRenewCheckoutEvent(_ref3) {
  var checkoutIds = _ref3.checkoutIds;
  return (0, _compose.composeAnalytics)([composeItemCheckoutEvent({
    event: EVENTS.RENEW_CHECKOUT,
    gtmAction: ACTIONS.RENEW_ITEM,
    gtmValue: checkoutIds.length
  })]);
}

function composeQuickRenewCheckoutsEvent(_ref4) {
  var status = _ref4.status,
      checkoutIds = _ref4.checkoutIds;
  return (0, _compose.composeAnalytics)([composeCheckoutsEvent({
    event: EVENTS.QUICK_RENEW_CHECKOUTS,
    gtmAction: ACTIONS.QUICK_RENEW,
    gtmLabel: status.toLowerCase(),
    gtmValue: checkoutIds.length
  })]);
}

function composeDigitalCheckoutEvent(_ref5) {
  var provider = _ref5.provider;
  return (0, _compose.composeAnalytics)([composeItemCheckoutEvent({
    event: EVENTS.DIGITAL_CHECKOUT,
    gtmAction: ACTIONS.PLACE,
    gtmValue: 1,
    gtmLabel: (0, _getLabelForProvider.default)(provider)
  })]);
}

function composePhysicalCheckoutEvent(_ref6) {
  var branchCode = _ref6.branchCode;
  return (0, _compose.composeAnalytics)([composeCheckoutsEvent({
    event: EVENTS.PHYSICAL_CHECKOUT,
    gtmAction: ACTIONS.PLACE,
    gtmLabel: "physical-" + branchCode,
    gtmValue: 1
  })]);
}

function composeReturnEvent(_ref7) {
  var provider = _ref7.provider;
  return (0, _compose.composeAnalytics)([composeItemCheckoutEvent({
    event: EVENTS.RETURN_CHEKOUT,
    gtmAction: ACTIONS.RETURN,
    gtmValue: 1,
    gtmLabel: (0, _getLabelForProvider.default)(provider)
  })]);
}

function composeDownloadEvent(_ref8) {
  var provider = _ref8.provider;
  return (0, _compose.composeAnalytics)([composeItemCheckoutEvent({
    event: EVENTS.DOWNLOAD_CHECKOUT,
    gtmAction: ACTIONS.DOWNLOAD,
    gtmValue: 1,
    gtmLabel: (0, _getLabelForProvider.default)(provider)
  })]);
}

function composeReadInBrowserEvent(_ref9) {
  var provider = _ref9.provider;
  return (0, _compose.composeAnalytics)([composeItemCheckoutEvent({
    event: EVENTS.READ_CHECKOUT_IN_BROWSER,
    gtmAction: ACTIONS.READ,
    gtmValue: 1,
    gtmLabel: (0, _getLabelForProvider.default)(provider)
  })]);
}

var _default = {
  composeRenewCheckoutEvent: composeRenewCheckoutEvent,
  composeDigitalCheckoutEvent: composeDigitalCheckoutEvent,
  composePhysicalCheckoutEvent: composePhysicalCheckoutEvent,
  composeReturnEvent: composeReturnEvent,
  composeDownloadEvent: composeDownloadEvent,
  composeReadInBrowserEvent: composeReadInBrowserEvent,
  composeQuickRenewCheckoutsEvent: composeQuickRenewCheckoutsEvent
};
exports.default = _default;