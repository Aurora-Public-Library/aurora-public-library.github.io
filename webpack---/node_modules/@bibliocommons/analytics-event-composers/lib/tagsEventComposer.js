"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _constantsAnalytics = _interopRequireDefault(require("@bibliocommons/constants-analytics"));

var _compose = require("./compose");

var CATEGORIES = _constantsAnalytics.default.CATEGORIES,
    EVENTS = _constantsAnalytics.default.EVENTS,
    ACTIONS = _constantsAnalytics.default.ACTIONS,
    CUSTOM_DIMENSIONS = _constantsAnalytics.default.CUSTOM_DIMENSIONS;

function composeTagsEvent(eventName, tagType, action, tagCount) {
  if (tagCount === void 0) {
    tagCount = 1;
  }

  return (0, _compose.composeEvent)(eventName, {
    gtmValue: tagCount,
    gtmLabel: tagType,
    gtmCategory: CATEGORIES.TAGS,
    gtmAction: action
  });
}

function composeTagClickEvent(_ref) {
  var tagName = _ref.tagName;
  return (0, _compose.composeAnalytics)([(0, _compose.composeEvent)(EVENTS.COMMUNITY_TAG_CLICK, {
    gtmCategory: CATEGORIES.TAGS,
    gtmAction: ACTIONS.CLICK_LINK,
    gtmLabel: tagName,
    gtmValue: 1,
    gtmContainerName: CUSTOM_DIMENSIONS.CONTAINER_NAMES.COMMUNITY_TAGS
  })]);
}

function composeAddTagsEvent(tagType, tagCount) {
  return (0, _compose.composeAnalytics)([composeTagsEvent(EVENTS.ADD_TAG, tagType, ACTIONS.ADD_CONTENT, tagCount)]);
}

function composeRemoveTagEvent(tagType) {
  return (0, _compose.composeAnalytics)([composeTagsEvent(EVENTS.REMOVE_TAG, tagType, ACTIONS.REMOVE_CONTENT)]);
}

var _default = {
  composeAddTagsEvent: composeAddTagsEvent,
  composeRemoveTagEvent: composeRemoveTagEvent,
  composeTagClickEvent: composeTagClickEvent
};
exports.default = _default;