"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = CharacterCount;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _reactIntl = require("react-intl");

var _baseScreenReaderMessage = _interopRequireDefault(require("@bibliocommons/base-screen-reader-message"));

require("../styles/CharacterCount.scss");

function CharacterCount(_ref) {
  var count = _ref.count,
      limit = _ref.limit,
      _ref$screenReaderOnly = _ref.screenReaderOnly,
      screenReaderOnly = _ref$screenReaderOnly === void 0 ? false : _ref$screenReaderOnly;
  var srOnlyClass = screenReaderOnly ? 'sr-only' : '';
  var overLimitClass = count > limit ? 'over-limit' : '';

  var totalText = /*#__PURE__*/_react.default.createElement("span", {
    className: "" + overLimitClass
  }, count);

  return /*#__PURE__*/_react.default.createElement("small", {
    className: srOnlyClass + " cp-character-count"
  }, /*#__PURE__*/_react.default.createElement("div", {
    "aria-hidden": "true",
    "data-test-id": "character-count-characters-used"
  }, /*#__PURE__*/_react.default.createElement(_reactIntl.FormattedMessage, {
    id: "fraction_of_characters_used",
    values: {
      total: totalText,
      limit: limit
    }
  })), /*#__PURE__*/_react.default.createElement(_baseScreenReaderMessage.default, null, /*#__PURE__*/_react.default.createElement(_reactIntl.FormattedMessage, {
    id: "fraction_of_characters_used_screen_reader",
    values: {
      total: count,
      limit: limit
    }
  }, function (message) {
    return /*#__PURE__*/_react.default.createElement("div", {
      "aria-live": "polite",
      "aria-atomic": "true"
    }, message);
  })));
}

CharacterCount.propTypes = {
  count: _propTypes.default.number,
  limit: _propTypes.default.number,
  screenReaderOnly: _propTypes.default.bool
};