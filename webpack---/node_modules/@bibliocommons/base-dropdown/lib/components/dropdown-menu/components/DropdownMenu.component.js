"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _findIndex = _interopRequireDefault(require("lodash/findIndex"));

var _tabbable = require("tabbable");

var _classnames = _interopRequireDefault(require("classnames"));

var _reactImmutableProptypes = _interopRequireDefault(require("react-immutable-proptypes"));

var _utilsReact = require("@bibliocommons/utils-react");

var _bcPropTypes = require("@bibliocommons/bc-prop-types");

var _DropdownMenuItem = _interopRequireDefault(require("./DropdownMenuItem.component"));

require("../styles/DropdownMenu.scss");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var ARROW_UP = 'ArrowUp';
var ARROW_DOWN = 'ArrowDown';
var TAB = 'Tab';

var DropdownMenu = /*#__PURE__*/function (_React$PureComponent) {
  (0, _inherits2.default)(DropdownMenu, _React$PureComponent);

  var _super = _createSuper(DropdownMenu);

  function DropdownMenu(props) {
    var _this;

    (0, _classCallCheck2.default)(this, DropdownMenu);
    _this = _super.call(this, props);
    (0, _utilsReact.bindAll)((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  (0, _createClass2.default)(DropdownMenu, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var tabbableElements = (0, _tabbable.tabbable)(this._dropdownmenu);

      if (tabbableElements.length > 0) {
        this._dropdownmenu.addEventListener('keydown', this.handleKeyDown);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      // remove listener for keydown on the document
      if (this._dropdownmenu) {
        this._dropdownmenu.removeEventListener('keydown', this.handleKeyDown);
      }

      this._dropdownmenu = null;
    }
  }, {
    key: "handleKeyDown",
    value: function handleKeyDown(e) {
      var closeAndFocusContent = this.props.popupActions.closeAndFocusContent;
      var tabbableElements = (0, _tabbable.tabbable)(this._dropdownmenu);

      if ([ARROW_DOWN, ARROW_UP, TAB].indexOf(e.key) !== -1) {
        var moveUp = e.key === ARROW_UP || e.key === TAB && e.shiftKey;
        var focusedIndex = (0, _findIndex.default)(tabbableElements, function (item) {
          return item === document.activeElement;
        });
        var moveIndex = moveUp ? -1 : 1;
        var nextItem = tabbableElements[focusedIndex + moveIndex];

        if (!nextItem) {
          if (e.key === TAB && typeof closeAndFocusContent === 'function') {
            e.preventDefault();
            closeAndFocusContent();
          }

          return;
        }

        e.preventDefault();
        nextItem.focus();
      }
    }
  }, {
    key: "handleSelect",
    value: function handleSelect(value) {
      if (this.props.handleSelect) {
        this.props.handleSelect(value);
      }
    }
  }, {
    key: "renderItem",
    value: function renderItem(item) {
      var _this2 = this;

      var value = item.get('value');
      var key = "dropdown-item-" + this.props.id + "-" + value;
      return /*#__PURE__*/_react.default.createElement(_DropdownMenuItem.default, {
        key: key,
        item: item,
        selectable: this.props.selectable,
        handleClick: function handleClick() {
          return _this2.handleSelect(value);
        },
        closeAndFocus: this.props.popupActions.closeAndFocusContent
      });
    }
  }, {
    key: "renderChildren",
    value: function renderChildren() {
      var _this3 = this;

      return _react.default.Children.map(this.props.children, function (child) {
        return child && /*#__PURE__*/_react.default.cloneElement(child, {
          closeAndFocus: _this3.props.popupActions.closeAndFocusContent
        });
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      var menuClasses = (0, _classnames.default)('cp-dropdown-menu', 'dropdown-menu__list', {
        'dropdown-menu--block': this.props.block,
        'dropdown-menu--dropup': this.props.dropup,
        'dropdown-menu--right': this.props.right
      });
      var _this$props$popupActi = this.props.popupActions,
          setPopperElement = _this$props$popupActi.setPopperElement,
          styles = _this$props$popupActi.styles,
          attributes = _this$props$popupActi.attributes;
      return /*#__PURE__*/_react.default.createElement("ul", (0, _extends2.default)({
        id: this.props.id,
        className: menuClasses,
        "data-key": "dropdown-menu",
        ref: function ref(el) {
          _this4._dropdownmenu = el;
          setPopperElement(el);
        },
        style: styles.popper
      }, attributes.popper), this.props.children ? this.renderChildren() : this.props.options.map(this.renderItem));
    }
  }]);
  return DropdownMenu;
}(_react.default.PureComponent);

DropdownMenu.propTypes = {
  handleSelect: _propTypes.default.func,
  children: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.array]),
  options: _reactImmutableProptypes.default.listOf(_bcPropTypes.dropdownOptionShape),
  selectable: _propTypes.default.bool,
  dropup: _propTypes.default.bool,
  block: _propTypes.default.bool,
  right: _propTypes.default.bool,
  id: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  popupActions: _propTypes.default.shape({
    closeAndFocusContent: _propTypes.default.func,
    setPopperElement: _propTypes.default.func,
    styles: _propTypes.default.object,
    attributes: _propTypes.default.object
  })
};
var _default = DropdownMenu;
exports.default = _default;