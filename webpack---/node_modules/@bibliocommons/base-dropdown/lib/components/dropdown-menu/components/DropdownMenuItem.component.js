"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _utilsReact = require("@bibliocommons/utils-react");

var _baseIcons = require("@bibliocommons/base-icons");

var _bcPropTypes = require("@bibliocommons/bc-prop-types");

require("../styles/DropdownMenuItem.scss");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var DropdownMenuItem = /*#__PURE__*/function (_React$PureComponent) {
  (0, _inherits2.default)(DropdownMenuItem, _React$PureComponent);

  var _super = _createSuper(DropdownMenuItem);

  function DropdownMenuItem() {
    var _this;

    (0, _classCallCheck2.default)(this, DropdownMenuItem);
    _this = _super.call(this);
    (0, _utilsReact.bindAll)((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  (0, _createClass2.default)(DropdownMenuItem, [{
    key: "handleClick",
    value: function handleClick() {
      var _this$props = this.props,
          item = _this$props.item,
          handleClick = _this$props.handleClick,
          closeOnClick = _this$props.closeOnClick,
          closeAndFocus = _this$props.closeAndFocus;

      if (!(item !== null && item !== void 0 && item.get('selected'))) {
        if (handleClick) handleClick();
        if (closeOnClick && closeAndFocus) closeAndFocus();
      }
    }
  }, {
    key: "renderItem",
    value: function renderItem() {
      var _this$props2 = this.props,
          item = _this$props2.item,
          selectable = _this$props2.selectable;
      var selected = selectable && item.get('selected');
      var classNames = (0, _classnames.default)('dropdown-menu-item__button', {
        'dropdown-menu-item__button--selectable': selectable,
        'dropdown-menu-item__button--selected': selected
      });
      var ariaState = selectable ? {
        'aria-pressed': !!selected
      } : {};
      return /*#__PURE__*/_react.default.createElement("button", (0, _extends2.default)({
        className: classNames,
        disabled: item.get('disabled') || item.get('selected'),
        type: "button",
        "data-key": item.get('value') + "-menu-item"
      }, ariaState), selected && /*#__PURE__*/_react.default.createElement(_baseIcons.Checkmark, {
        className: "dropdown-menu-item__selected-icon"
      }), item.get('label'));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
          className = _this$props3.className,
          item = _this$props3.item,
          children = _this$props3.children;
      /* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions */

      return /*#__PURE__*/_react.default.createElement("li", {
        onClick: this.handleClick,
        className: (0, _classnames.default)('cp-dropdown-menu-item', className)
      }, item ? this.renderItem() : children);
      /* eslint-enable jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions */
    }
  }]);
  return DropdownMenuItem;
}(_react.default.PureComponent);

exports.default = DropdownMenuItem;
DropdownMenuItem.propTypes = {
  item: _bcPropTypes.dropdownOptionShape,
  selectable: _propTypes.default.bool,
  children: _bcPropTypes.childrenShape,
  className: _propTypes.default.string,
  handleClick: _propTypes.default.func,
  closeOnClick: _propTypes.default.bool,
  closeAndFocus: _propTypes.default.func
};
DropdownMenuItem.defaultProps = {
  closeOnClick: true
};