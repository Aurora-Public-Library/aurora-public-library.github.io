"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _uniqueId = _interopRequireDefault(require("lodash/uniqueId"));

var _omit = _interopRequireDefault(require("lodash/omit"));

var _classnames = _interopRequireDefault(require("classnames"));

var _reactImmutableProptypes = _interopRequireDefault(require("react-immutable-proptypes"));

var _utilsReact = require("@bibliocommons/utils-react");

var _basePopupManager = _interopRequireDefault(require("@bibliocommons/base-popup-manager"));

var _baseIcons = require("@bibliocommons/base-icons");

var _bcPropTypes = require("@bibliocommons/bc-prop-types");

var _dropdownMenu = _interopRequireDefault(require("../../dropdown-menu"));

var _dropdownButton = require("../../dropdown-button");

require("../styles/Dropdown.scss");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var propTypes = {
  buttonTag: _propTypes.default.elementType,
  children: _bcPropTypes.childrenShape,
  options: _reactImmutableProptypes.default.listOf(_bcPropTypes.dropdownOptionShape),
  handleSelect: _propTypes.default.func,
  className: _propTypes.default.string,
  buttonClassName: _propTypes.default.string,
  renderLabel: _propTypes.default.func,
  renderTrigger: _propTypes.default.func,
  dropdownMenuId: _propTypes.default.string,
  dataKey: _propTypes.default.string.isRequired,
  selectable: _propTypes.default.bool,
  mountAsOpen: _propTypes.default.bool,
  dropup: _propTypes.default.bool,
  right: _propTypes.default.bool,
  isLoading: _propTypes.default.bool,
  block: _propTypes.default.bool,
  rounded: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  loadingText: _bcPropTypes.childrenShape,
  showLoadingText: _propTypes.default.bool
};

var Dropdown = /*#__PURE__*/function (_React$PureComponent) {
  (0, _inherits2.default)(Dropdown, _React$PureComponent);

  var _super = _createSuper(Dropdown);

  function Dropdown(props) {
    var _this;

    (0, _classCallCheck2.default)(this, Dropdown);
    _this = _super.call(this, props);
    (0, _utilsReact.bindAll)((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  (0, _createClass2.default)(Dropdown, [{
    key: "renderDropdownMenu",
    value: function renderDropdownMenu(popupActions) {
      var dropdownMenuId = this.props.dropdownMenuId || (0, _uniqueId.default)('dropdownMenu_');
      return /*#__PURE__*/_react.default.createElement(_dropdownMenu.default, {
        id: dropdownMenuId,
        right: this.props.right,
        block: this.props.block,
        dropup: this.props.dropup,
        selectable: this.props.selectable,
        options: this.props.options,
        handleSelect: this.props.handleSelect,
        popupActions: popupActions
      }, this.props.children);
    }
  }, {
    key: "renderLabel",
    value: function renderLabel(expanded) {
      var _this$props = this.props,
          options = _this$props.options,
          renderLabel = _this$props.renderLabel;

      if (renderLabel) {
        return renderLabel(expanded);
      }

      var selectedOption = options.find(function (item) {
        return !!item.get('selected');
      });
      return selectedOption && selectedOption.get('label');
    }
  }, {
    key: "renderTrigger",
    value: function renderTrigger(handleToggle, expanded) {
      if (expanded === void 0) {
        expanded = false;
      }

      if (this.props.renderTrigger) {
        return this.props.renderTrigger(handleToggle, expanded);
      }

      var TagForButton = this.props.buttonTag || _dropdownButton.DropdownButton;
      var classNames = (0, _classnames.default)('dropdown__button', this.props.buttonClassName);
      var extraProps = (0, _omit.default)(this.props, Object.keys(propTypes));
      return /*#__PURE__*/_react.default.createElement(TagForButton, (0, _extends2.default)({
        className: classNames,
        block: this.props.block,
        rounded: this.props.rounded,
        disabled: this.props.disabled,
        isLoading: this.props.isLoading,
        showLoadingText: this.props.showLoadingText,
        loadingText: this.props.loadingText,
        handleClick: handleToggle,
        "aria-expanded": expanded,
        "aria-haspopup": true
      }, extraProps), /*#__PURE__*/_react.default.createElement("span", {
        className: "dropdown__button_content"
      }, /*#__PURE__*/_react.default.createElement("span", {
        className: "dropdown__button__label"
      }, this.renderLabel(expanded)), /*#__PURE__*/_react.default.createElement(_baseIcons.ChevronDown, {
        className: "dropdown-button__chevron"
      })));
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props2 = this.props,
          block = _this$props2.block,
          className = _this$props2.className,
          dataKey = _this$props2.dataKey,
          mountAsOpen = _this$props2.mountAsOpen,
          right = _this$props2.right;
      var classNames = (0, _classnames.default)('cp-dropdown', className, {
        'dropdown--block': block
      });
      return /*#__PURE__*/_react.default.createElement(_basePopupManager.default, {
        renderContent: this.renderDropdownMenu,
        initialOpenState: mountAsOpen,
        className: classNames,
        dataKey: dataKey,
        rightAligned: right
      }, function (popupActions, expanded) {
        return _this2.renderTrigger(popupActions.toggleContent, expanded);
      });
    }
  }]);
  return Dropdown;
}(_react.default.PureComponent);

exports.default = Dropdown;
Dropdown.propTypes = propTypes;