"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Spinner;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _svg = _interopRequireDefault(require("@bibliocommons/svg"));

var _bcPropTypes = require("@bibliocommons/bc-prop-types");

var _constantsIcons = require("@bibliocommons/constants-icons");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function Spinner(_ref) {
  var className = _ref.className,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? _constantsIcons.Spinner.width : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === void 0 ? _constantsIcons.Spinner.height : _ref$height,
      _ref$primary = _ref.primary,
      primary = _ref$primary === void 0 ? false : _ref$primary;
  return /*#__PURE__*/_react.default.createElement(_svg.default, {
    className: (0, _classnames.default)('icon-svg-spinner', className, {
      'spinner--primary': primary
    }),
    width: width,
    height: height,
    viewBox: _constantsIcons.Spinner.viewBox,
    contentHtml: _constantsIcons.Spinner.definition
  });
}

Spinner.propTypes = _objectSpread(_objectSpread({}, _bcPropTypes.iconShape), {}, {
  primary: _propTypes.default.bool
});