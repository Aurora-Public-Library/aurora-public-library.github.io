"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _reactImmutableProptypes = _interopRequireDefault(require("react-immutable-proptypes"));

var _classnames = _interopRequireDefault(require("classnames"));

var _utilsReact = require("@bibliocommons/utils-react");

var _utilsAccessibility = require("@bibliocommons/utils-accessibility");

var _expandLink = _interopRequireDefault(require("../../expand-link"));

require("../styles/ExpandableList.scss");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var ExpandableList = /*#__PURE__*/function (_React$PureComponent) {
  (0, _inherits2.default)(ExpandableList, _React$PureComponent);

  var _super = _createSuper(ExpandableList);

  function ExpandableList(props) {
    var _this;

    (0, _classCallCheck2.default)(this, ExpandableList);
    _this = _super.call(this, props);
    _this.state = {
      expanded: false
    };
    (0, _utilsReact.bindAll)((0, _assertThisInitialized2.default)(_this));
    _this.firstExpandedItem = null;
    return _this;
  }

  (0, _createClass2.default)(ExpandableList, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (!prevState.expanded && this.state.expanded && this.firstExpandedItem) {
        (0, _utilsAccessibility.setFocusWithinElement)(this.firstExpandedItem);
      }
    }
  }, {
    key: "handleToggle",
    value: function handleToggle() {
      var _this2 = this;

      this.setState(function (state) {
        return {
          expanded: !state.expanded
        };
      }, function () {
        if (_this2.props.handleToggle) {
          _this2.props.handleToggle(_this2.state.expanded);
        }
      });
    }
  }, {
    key: "renderExpandLink",
    value: function renderExpandLink() {
      var _this$props = this.props,
          list = _this$props.list,
          collapseCount = _this$props.collapseCount,
          renderExpandLinkLabel = _this$props.renderExpandLinkLabel,
          expandLinkHref = _this$props.expandLinkHref,
          textKey = _this$props.textKey;

      if ((list.length || list.size) > collapseCount) {
        return /*#__PURE__*/_react.default.createElement(_expandLink.default, {
          href: expandLinkHref,
          handleToggle: this.handleToggle,
          expanded: this.state.expanded,
          renderLabel: renderExpandLinkLabel,
          textKey: textKey
        });
      }

      return null;
    }
  }, {
    key: "renderListItem",
    value: function renderListItem(item, index) {
      var _this3 = this;

      var _this$props2 = this.props,
          collapseCount = _this$props2.collapseCount,
          itemClassName = _this$props2.itemClassName,
          getItemKey = _this$props2.getItemKey,
          renderItem = _this$props2.renderItem;
      var classNames = (0, _classnames.default)('expandable-list__item', itemClassName);

      if (!this.state.expanded && index > collapseCount - 1) {
        return null;
      }

      var setRef = function setRef(ref) {
        if (index === collapseCount) {
          _this3.firstExpandedItem = ref;
        }
      };

      return /*#__PURE__*/_react.default.createElement("li", {
        key: getItemKey(item),
        className: classNames,
        ref: setRef
      }, renderItem(item));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
          className = _this$props3.className,
          list = _this$props3.list,
          stacked = _this$props3.stacked;
      return /*#__PURE__*/_react.default.createElement("div", {
        className: (0, _classnames.default)('cp-expandable-list', className, {
          'expandable-list--stacked': stacked
        })
      }, /*#__PURE__*/_react.default.createElement("ul", null, list.map(this.renderListItem)), this.renderExpandLink());
    }
  }]);
  return ExpandableList;
}(_react.default.PureComponent);

exports.default = ExpandableList;
ExpandableList.propTypes = {
  collapseCount: _propTypes.default.number.isRequired,
  className: _propTypes.default.string,
  itemClassName: _propTypes.default.string,
  list: _propTypes.default.oneOfType([_propTypes.default.array, _reactImmutableProptypes.default.list]).isRequired,
  renderItem: _propTypes.default.func.isRequired,
  getItemKey: _propTypes.default.func.isRequired,
  renderExpandLinkLabel: _propTypes.default.func,
  stacked: _propTypes.default.bool,
  expandLinkHref: _propTypes.default.string.isRequired,
  textKey: _propTypes.default.string,
  handleToggle: _propTypes.default.func
};