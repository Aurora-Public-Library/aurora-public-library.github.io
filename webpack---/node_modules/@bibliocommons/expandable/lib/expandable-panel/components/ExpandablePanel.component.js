"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _utilsReact = require("@bibliocommons/utils-react");

var _bcPropTypes = require("@bibliocommons/bc-prop-types");

var _utilsAccessibility = require("@bibliocommons/utils-accessibility");

var _expandLink = _interopRequireDefault(require("../../expand-link"));

require("../styles/ExpandablePanel.scss");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var ExpandablePanel = /*#__PURE__*/function (_React$PureComponent) {
  (0, _inherits2.default)(ExpandablePanel, _React$PureComponent);

  var _super = _createSuper(ExpandablePanel);

  function ExpandablePanel(props) {
    var _this;

    (0, _classCallCheck2.default)(this, ExpandablePanel);
    _this = _super.call(this, props);
    _this.state = {
      expanded: false
    };
    (0, _utilsReact.bindAll)((0, _assertThisInitialized2.default)(_this));
    _this.contentRef = null;
    return _this;
  }

  (0, _createClass2.default)(ExpandablePanel, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (!prevState.expanded && this.state.expanded && this.contentRef) {
        (0, _utilsAccessibility.setFocusWithinElement)(this.contentRef);
      }
    }
  }, {
    key: "handleToggle",
    value: function handleToggle() {
      var _this2 = this;

      this.setState(function (state) {
        return {
          expanded: !state.expanded
        };
      }, function () {
        if (_this2.props.handleToggle) {
          _this2.props.handleToggle({
            expanded: _this2.state.expanded
          });
        }
      });
    }
  }, {
    key: "renderExpandLink",
    value: function renderExpandLink() {
      var _this$props = this.props,
          renderExpandLabel = _this$props.renderExpandLabel,
          expandLinkHref = _this$props.expandLinkHref;
      return /*#__PURE__*/_react.default.createElement(_expandLink.default, {
        handleToggle: this.handleToggle,
        expanded: this.state.expanded,
        renderLabel: renderExpandLabel,
        href: expandLinkHref,
        hideIcon: true
      });
    }
  }, {
    key: "renderHeading",
    value: function renderHeading() {
      return /*#__PURE__*/_react.default.createElement("div", {
        className: "panel-heading"
      }, this.props.renderHeaderContent(), this.renderExpandLink());
    }
  }, {
    key: "renderBodyContent",
    value: function renderBodyContent() {
      var _this3 = this;

      return /*#__PURE__*/_react.default.createElement("div", {
        className: "panel-body",
        ref: function ref(el) {
          _this3.contentRef = el;
        }
      }, this.props.children);
    }
  }, {
    key: "render",
    value: function render() {
      var className = this.props.className;
      return /*#__PURE__*/_react.default.createElement("div", {
        className: (0, _classnames.default)('cp-expandable-panel panel', className)
      }, this.renderHeading(), this.state.expanded ? this.renderBodyContent() : null);
    }
  }]);
  return ExpandablePanel;
}(_react.default.PureComponent);

exports.default = ExpandablePanel;
ExpandablePanel.propTypes = {
  className: _propTypes.default.string,
  renderHeaderContent: _propTypes.default.func,
  renderExpandLabel: _propTypes.default.func,
  handleToggle: _propTypes.default.func,
  children: _bcPropTypes.childrenShape,
  expandLinkHref: _propTypes.default.string.isRequired
};