"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _reactIntl = require("react-intl");

var _classnames = _interopRequireDefault(require("classnames"));

var _utilsReact = require("@bibliocommons/utils-react");

var _baseScreenReaderMessage = _interopRequireDefault(require("@bibliocommons/base-screen-reader-message"));

var _utilsString = require("@bibliocommons/utils-string");

var _expandLink = _interopRequireDefault(require("../../expand-link"));

require("../styles/ExpandableText.scss");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var ExpandableText = /*#__PURE__*/function (_React$PureComponent) {
  (0, _inherits2.default)(ExpandableText, _React$PureComponent);

  var _super = _createSuper(ExpandableText);

  function ExpandableText(props) {
    var _this;

    (0, _classCallCheck2.default)(this, ExpandableText);
    _this = _super.call(this, props);
    (0, _utilsReact.bindAll)((0, _assertThisInitialized2.default)(_this));
    _this.state = {
      expanded: false
    };
    return _this;
  }

  (0, _createClass2.default)(ExpandableText, [{
    key: "handleToggle",
    value: function handleToggle() {
      var expanded = this.state.expanded;
      this.setState({
        expanded: !expanded
      });
    }
  }, {
    key: "renderExpandLabel",
    value: function renderExpandLabel() {
      var expanded = this.state.expanded;
      var labelKey = expanded ? 'read_less' : 'read_more';
      return /*#__PURE__*/_react.default.createElement("span", null, /*#__PURE__*/_react.default.createElement("span", {
        "aria-hidden": true
      }, /*#__PURE__*/_react.default.createElement(_reactIntl.FormattedMessage, {
        id: labelKey
      })), /*#__PURE__*/_react.default.createElement(_baseScreenReaderMessage.default, null, /*#__PURE__*/_react.default.createElement(_reactIntl.FormattedMessage, {
        id: labelKey + "_" + this.props.textKey
      })));
    }
  }, {
    key: "renderExpandLink",
    value: function renderExpandLink() {
      var _this2 = this;

      var expandLinkHref = this.props.expandLinkHref;
      return /*#__PURE__*/_react.default.createElement(_expandLink.default, {
        expanded: this.state.expanded,
        href: expandLinkHref,
        handleToggle: this.handleToggle,
        renderLabel: function renderLabel() {
          return _this2.renderExpandLabel();
        }
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          text = _this$props.text,
          truncateCount = _this$props.truncateCount,
          className = _this$props.className;
      var expanded = this.state.expanded;
      var truncatedText = (0, _utilsString.truncate)(text, {
        desiredLength: truncateCount
      });
      var anyTextTruncated = truncatedText.length !== text.length;
      return /*#__PURE__*/_react.default.createElement("div", {
        className: (0, _classnames.default)('cp-expandable-text', className)
      }, /*#__PURE__*/_react.default.createElement("span", {
        className: "expandable-text__text"
      }, expanded ? text : truncatedText), anyTextTruncated && this.renderExpandLink());
    }
  }]);
  return ExpandableText;
}(_react.default.PureComponent);

exports.default = ExpandableText;
ExpandableText.propTypes = {
  text: _propTypes.default.string.isRequired,
  truncateCount: _propTypes.default.number,
  className: _propTypes.default.string,
  expandLinkHref: _propTypes.default.string.isRequired,
  textKey: _propTypes.default.string
};
ExpandableText.defaultProps = {
  truncateCount: 250
};