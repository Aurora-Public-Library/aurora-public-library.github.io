"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ModalFooter;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _reactIntl = require("react-intl");

var _classnames = _interopRequireDefault(require("classnames"));

var _baseButtons = require("@bibliocommons/base-buttons");

require("../styles/ModalFooter.scss");

function close() {
  window.history.back();
}

function ModalFooter(_ref) {
  var className = _ref.className,
      disabled = _ref.disabled,
      isLoading = _ref.isLoading,
      stacked = _ref.stacked,
      primaryActionButtonTag = _ref.primaryActionButtonTag,
      primaryActionButtonText = _ref.primaryActionButtonText,
      secondaryActionButtonTag = _ref.secondaryActionButtonTag,
      secondaryActionButtonText = _ref.secondaryActionButtonText,
      handlePrimaryAction = _ref.handlePrimaryAction,
      renderPrimaryAction = _ref.renderPrimaryAction,
      renderSecondaryAction = _ref.renderSecondaryAction;
  var PrimaryActionButtonTag = primaryActionButtonTag || _baseButtons.PrimarySolidButton;
  var primaryButton = renderPrimaryAction ? renderPrimaryAction() : /*#__PURE__*/_react.default.createElement(PrimaryActionButtonTag, {
    className: "modal-footer__primary-button",
    dataKey: "modal-primary-button",
    disabled: disabled,
    isLoading: isLoading,
    handleClick: handlePrimaryAction
  }, primaryActionButtonText);
  var SecondaryActionButtonTag = secondaryActionButtonTag || _baseButtons.SecondaryTextButton;
  var secondaryButton = renderSecondaryAction ? renderSecondaryAction() : /*#__PURE__*/_react.default.createElement(SecondaryActionButtonTag, {
    className: "modal-footer__secondary-button",
    dataKey: "modal-secondary-button",
    handleClick: close
  }, secondaryActionButtonText || /*#__PURE__*/_react.default.createElement(_reactIntl.FormattedMessage, {
    id: "button_cancel"
  }));
  var classNames = (0, _classnames.default)('cp-modal-footer', className, {
    'modal-footer--stacked': stacked
  });
  return /*#__PURE__*/_react.default.createElement("footer", {
    className: classNames
  }, stacked ? primaryButton : secondaryButton, stacked ? secondaryButton : primaryButton);
}

ModalFooter.propTypes = {
  className: _propTypes.default.string,
  primaryActionButtonTag: _propTypes.default.elementType,
  primaryActionButtonText: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.node]),
  secondaryActionButtonTag: _propTypes.default.elementType,
  secondaryActionButtonText: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.node]),
  handlePrimaryAction: _propTypes.default.func,
  renderPrimaryAction: _propTypes.default.func,
  renderSecondaryAction: _propTypes.default.func,
  isLoading: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  stacked: _propTypes.default.bool
};