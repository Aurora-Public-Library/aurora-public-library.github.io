"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _he = _interopRequireDefault(require("he"));

var _utilsHtml = require("@bibliocommons/utils-html");

var _reactIntl = require("react-intl");

function FormattedHTMLMessage(_ref) {
  var _intl$messages;

  var id = _ref.id,
      _ref$tagName = _ref.tagName,
      Tag = _ref$tagName === void 0 ? 'span' : _ref$tagName,
      _ref$values = _ref.values,
      values = _ref$values === void 0 ? {} : _ref$values,
      defaultMessage = _ref.defaultMessage;
  var intl = (0, _reactIntl.useIntl)();
  var message = ((_intl$messages = intl.messages) === null || _intl$messages === void 0 ? void 0 : _intl$messages[id]) || defaultMessage || id; // Use FormattedMessage if the message does not contain html tags or html entities

  var noHtmlTags = (0, _utilsHtml.stripTags)(message) === message;
  var noHtmlEntities = _he.default.decode(message) === message;

  if (noHtmlTags && noHtmlEntities) {
    return /*#__PURE__*/_react.default.createElement(_reactIntl.FormattedMessage, {
      id: id,
      tagName: Tag,
      values: values,
      defaultMessage: defaultMessage
    });
  } // Simply replace placeholders in the message with corresponding values.
  // Note that advanced formatting syntax (select, plural, etc) is not supported.
  // eg. Input: "The <strong>{floorname}</strong>", Output: "The <strong>1st Floor</strong> at <strong>"


  var formattted = message.replace(/\{(\w+)\}/g, function formatter(_, placeholder) {
    return values[placeholder] || placeholder;
  });
  return /*#__PURE__*/_react.default.createElement(Tag, {
    id: id,
    dangerouslySetInnerHTML: {
      __html: formattted
    }
  });
}

FormattedHTMLMessage.propTypes = {
  id: _propTypes.default.string.isRequired,
  tagName: _propTypes.default.string,
  values: _propTypes.default.object,
  defaultMessage: _propTypes.default.string
};
var _default = FormattedHTMLMessage;
exports.default = _default;