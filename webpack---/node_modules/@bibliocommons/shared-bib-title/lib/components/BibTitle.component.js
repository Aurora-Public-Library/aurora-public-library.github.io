"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.BibTitle = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _reactIntl = require("react-intl");

var _baseScreenReaderMessage = _interopRequireDefault(require("@bibliocommons/base-screen-reader-message"));

var _utilsLink = require("@bibliocommons/utils-link");

var _utilsReact = require("@bibliocommons/utils-react");

var _sharedBibSubtitle = _interopRequireDefault(require("@bibliocommons/shared-bib-subtitle"));

var _constantsLanguages = require("@bibliocommons/constants-languages");

var _bcPropTypes = require("@bibliocommons/bc-prop-types");

var _utilsString = require("@bibliocommons/utils-string");

var _analyticsEventComposers = require("@bibliocommons/analytics-event-composers");

var _utilsAnalytics = require("@bibliocommons/utils-analytics");

var _constantsAnalytics = _interopRequireDefault(require("@bibliocommons/constants-analytics"));

require("../styles/BibTitle.scss");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var composeTitleClickEvent = _analyticsEventComposers.bibEventComposer.composeTitleClickEvent;
var CUSTOM_DIMENSIONS = _constantsAnalytics.default.CUSTOM_DIMENSIONS;

var BibTitle = /*#__PURE__*/function (_React$PureComponent) {
  (0, _inherits2.default)(BibTitle, _React$PureComponent);

  var _super = _createSuper(BibTitle);

  function BibTitle(props) {
    var _this;

    (0, _classCallCheck2.default)(this, BibTitle);
    _this = _super.call(this, props);
    (0, _utilsReact.bindAll)((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  (0, _createClass2.default)(BibTitle, [{
    key: "focusOnTitle",
    value: function focusOnTitle() {
      if (this._title) {
        this._title.focus();
      }
    }
  }, {
    key: "formatText",
    value: function formatText(text) {
      var truncateOptions = this.props.truncateOptions;
      return truncateOptions ? (0, _utilsString.truncate)(text, truncateOptions) : text;
    }
  }, {
    key: "handleClick",
    value: function handleClick() {
      var _this$props = this.props,
          reciprocalRank = _this$props.reciprocalRank,
          bib = _this$props.bib;
      var metadataId = bib.get('metadataId');
      (0, _utilsAnalytics.sendAnalyticsEvents)(composeTitleClickEvent({
        containerName: CUSTOM_DIMENSIONS.CONTAINER_NAMES.BIB_ITEM,
        reciprocalRank: reciprocalRank,
        metadataId: metadataId
      }));
    }
  }, {
    key: "renderScreenReaderMessage",
    value: function renderScreenReaderMessage() {
      var _this$props2 = this.props,
          renderScreenReaderMessage = _this$props2.renderScreenReaderMessage,
          bib = _this$props2.bib,
          intl = _this$props2.intl;
      var title = bib.get('multiscriptTitle') || bib.get('title');
      var format = intl.formatMessage({
        id: "FORMAT." + bib.get('format').toLowerCase()
      });
      var values = {
        title: title,
        format: format
      };

      if (renderScreenReaderMessage) {
        return renderScreenReaderMessage(values);
      }

      return /*#__PURE__*/_react.default.createElement(_reactIntl.FormattedMessage, {
        id: "ada_link_to_item_page",
        values: values
      });
    }
  }, {
    key: "renderTitle",
    value: function renderTitle() {
      var _this2 = this;

      var _this$props3 = this.props,
          renderAsLink = _this$props3.renderAsLink,
          target = _this$props3.target,
          bib = _this$props3.bib;
      var titleContent = bib.get('multiscriptTitle') || bib.get('title');
      var formattedTitleContent = this.formatText(titleContent);
      var lang = _constantsLanguages.threeLetterToTwoLetterLangCodes[bib.get('primaryLanguage')] || 'en';
      var id = bib.get('id');

      if (renderAsLink) {
        return /*#__PURE__*/_react.default.createElement("a", {
          href: "/item/show/" + (0, _utilsLink.metadataIdFixer)(id),
          target: target,
          lang: lang,
          rel: "noopener",
          ref: function ref(el) {
            return _this2._title = el;
          },
          "data-test-id": "bib-title-" + id,
          "data-key": "bib-title",
          onClick: this.handleClick
        }, /*#__PURE__*/_react.default.createElement("span", {
          "aria-hidden": "true",
          className: "title-content"
        }, formattedTitleContent), /*#__PURE__*/_react.default.createElement(_baseScreenReaderMessage.default, null, this.renderScreenReaderMessage()));
      }

      return /*#__PURE__*/_react.default.createElement("div", {
        lang: lang,
        "data-test-id": "bib-title-" + id,
        ref: function ref(el) {
          return _this2._title = el;
        },
        tabIndex: "-1"
      }, /*#__PURE__*/_react.default.createElement("span", {
        "aria-hidden": "true",
        className: "title-content"
      }, formattedTitleContent), /*#__PURE__*/_react.default.createElement(_baseScreenReaderMessage.default, null, titleContent));
    }
  }, {
    key: "renderSecondaryTitle",
    value: function renderSecondaryTitle() {
      var bib = this.props.bib;
      var title = bib.get('title');
      var multiscriptTitle = bib.get('multiscriptTitle');

      if (title && multiscriptTitle) {
        return /*#__PURE__*/_react.default.createElement("div", {
          className: "secondary-title"
        }, /*#__PURE__*/_react.default.createElement("span", {
          "aria-hidden": "true"
        }, this.formatText(title)), /*#__PURE__*/_react.default.createElement(_baseScreenReaderMessage.default, null, title));
      }

      return null;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props4 = this.props,
          titleTag = _this$props4.titleTag,
          renderIcon = _this$props4.renderIcon,
          bib = _this$props4.bib,
          renderMultiscriptOnly = _this$props4.renderMultiscriptOnly;
      var TitleTag = titleTag; // This needs to start with an uppercase letter since its a component

      return /*#__PURE__*/_react.default.createElement(TitleTag, {
        className: "cp-title"
      }, this.renderTitle(), renderIcon(), !renderMultiscriptOnly && this.renderSecondaryTitle(), /*#__PURE__*/_react.default.createElement(_sharedBibSubtitle.default, {
        subtitle: bib.get('subtitle'),
        titleTag: "span"
      }));
    }
  }]);
  return BibTitle;
}(_react.default.PureComponent);

exports.BibTitle = BibTitle;
var injectIntlPropTypes = {};
BibTitle.defaultProps = {
  titleTag: 'h2',
  target: '_parent',
  renderAsLink: true,
  renderIcon: function renderIcon() {
    return null;
  }
};
BibTitle.propTypes = _objectSpread({
  bib: _bcPropTypes.bibBriefShape,
  titleTag: _propTypes.default.string,
  target: _propTypes.default.string,
  renderAsLink: _propTypes.default.bool,
  renderIcon: _propTypes.default.func,
  truncateOptions: _bcPropTypes.truncateOptionsShape,
  reciprocalRank: _propTypes.default.number,
  renderScreenReaderMessage: _propTypes.default.func
}, injectIntlPropTypes);

var _default = (0, _reactIntl.injectIntl)(BibTitle, {
  forwardRef: true
});

exports.default = _default;