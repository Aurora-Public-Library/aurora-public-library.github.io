"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _capitalize2 = _interopRequireDefault(require("lodash/capitalize"));

var _last2 = _interopRequireDefault(require("lodash/last"));

var _immutable = _interopRequireDefault(require("immutable"));

var _reactImmutableProptypes = _interopRequireDefault(require("react-immutable-proptypes"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _reactIntl = require("react-intl");

var _reactIntl2 = require("@bibliocommons/react-intl");

var Alerts = _interopRequireWildcard(require("@bibliocommons/deprecated-base-alerts"));

var _keymirror = _interopRequireDefault(require("keymirror"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var STATUS_TYPES = (0, _keymirror.default)({
  Success: null,
  Failure: null,
  Neutral: null
});

var Generic = /*#__PURE__*/function (_React$PureComponent) {
  (0, _inherits2.default)(Generic, _React$PureComponent);

  var _super = _createSuper(Generic);

  function Generic(props) {
    var _this;

    (0, _classCallCheck2.default)(this, Generic);
    _this = _super.call(this, props);
    _this.timeout = null;
    return _this;
  }

  (0, _createClass2.default)(Generic, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.scheduleMessageClearance();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (this.timeout && this.props.message !== prevProps.message) {
        clearTimeout(this.timeout);
        this.timeout = null;
        this.scheduleMessageClearance();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.timeout) {
        clearTimeout(this.timeout);
        this.timeout = null;
      }
    }
  }, {
    key: "scheduleMessageClearance",
    value: function scheduleMessageClearance() {
      var _this2 = this;

      var _this$props = this.props,
          clearMessages = _this$props.clearMessages,
          duration = _this$props.duration,
          failureDuration = _this$props.failureDuration;

      if (duration) {
        var durationToUse = this.getAlertType() === STATUS_TYPES.Failure ? failureDuration : duration;
        this.timeout = setTimeout(function () {
          if (clearMessages) {
            clearMessages();
          }

          _this2.timeout = null;
        }, durationToUse);
      }
    }
  }, {
    key: "getDefaultMessage",
    value: function getDefaultMessage() {
      if (this.props.message.get('defaultMessage')) {
        return this.props.message.get('defaultMessage');
      }

      if (this.getAlertType() === STATUS_TYPES.Failure) {
        return this.props.intl.formatMessage({
          id: 'errors.ServiceException'
        });
      }

      return undefined;
    }
  }, {
    key: "getAlertType",
    value: function getAlertType() {
      var type = this.props.message.get('type');
      var alertType = (0, _last2.default)(type.split('_'));
      return (0, _capitalize2.default)(alertType);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          message = _this$props2.message,
          renderActionButton = _this$props2.renderActionButton;

      var extraValues = this.props.values || _immutable.default.Map();

      var Component = Alerts["Alert" + this.getAlertType()];

      if (!Component) {
        return null;
      }

      var MessageComponent = this.props.useFormattedMessage ? _reactIntl.FormattedMessage : _reactIntl2.FormattedHTMLMessage;
      return /*#__PURE__*/_react.default.createElement(Component, null, /*#__PURE__*/_react.default.createElement(MessageComponent, {
        id: message.get('id'),
        values: extraValues.merge(message.get('values', _immutable.default.Map())).toJS(),
        defaultMessage: this.getDefaultMessage()
      }), renderActionButton());
    }
  }]);
  return Generic;
}(_react.default.PureComponent);

Generic.propTypes = {
  message: _reactImmutableProptypes.default.map.isRequired,
  values: _reactImmutableProptypes.default.map,
  duration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.bool]),
  clearMessages: _propTypes.default.func.isRequired,
  failureDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.bool]),
  useFormattedMessage: _propTypes.default.bool,
  renderActionButton: _propTypes.default.func
};
Generic.defaultProps = {
  duration: 10000,
  failureDuration: 10000,
  renderActionButton: function renderActionButton() {
    return null;
  }
};

var _default = (0, _reactIntl.injectIntl)(Generic);

exports.default = _default;