"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.TextField = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _reactIntl = require("react-intl");

var _classnames = _interopRequireDefault(require("classnames"));

var _alerts = require("@bibliocommons/alerts");

var _utilsReact = require("@bibliocommons/utils-react");

var _baseCharacterCount = _interopRequireDefault(require("@bibliocommons/base-character-count"));

var _utilsHtml = require("@bibliocommons/utils-html");

require("../styles/TextField.scss");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var TextField = /*#__PURE__*/function (_React$PureComponent) {
  (0, _inherits2.default)(TextField, _React$PureComponent);

  var _super = _createSuper(TextField);

  function TextField(props) {
    var _this;

    (0, _classCallCheck2.default)(this, TextField);
    _this = _super.call(this, props);
    (0, _utilsReact.bindAll)((0, _assertThisInitialized2.default)(_this));
    return _this;
  }

  (0, _createClass2.default)(TextField, [{
    key: "handleChange",
    value: function handleChange(event) {
      if (this.props.onChange) {
        this.props.onChange(event.target.value);
      }
    }
  }, {
    key: "renderCharacterCount",
    value: function renderCharacterCount() {
      var _this$props = this.props,
          value = _this$props.value,
          suggestedMaxLength = _this$props.suggestedMaxLength,
          maxLength = _this$props.maxLength,
          characterCountSrOnly = _this$props.characterCountSrOnly;

      if (suggestedMaxLength || maxLength) {
        return /*#__PURE__*/_react.default.createElement(_baseCharacterCount.default, {
          screenReaderOnly: characterCountSrOnly,
          count: value ? value.length : 0,
          limit: suggestedMaxLength || maxLength
        });
      }

      return null;
    }
  }, {
    key: "renderInfo",
    value: function renderInfo() {
      return this.props.info ? /*#__PURE__*/_react.default.createElement("div", {
        className: "text-field__info"
      }, this.props.info) : null;
    }
  }, {
    key: "renderInputIcon",
    value: function renderInputIcon() {
      return this.props.inputIcon ? this.props.inputIcon : null;
    }
  }, {
    key: "render",
    value: function render() {
      var _cn;

      return /*#__PURE__*/_react.default.createElement("div", {
        className: (0, _classnames.default)('cp-text-field', this.props.className),
        "data-key": this.props.dataKey
      }, /*#__PURE__*/_react.default.createElement("label", {
        className: "text-field__label",
        htmlFor: this.props.id
      }, this.props.label, this.props.optional && /*#__PURE__*/_react.default.createElement("span", {
        className: "text-field__optional"
      }, "(", /*#__PURE__*/_react.default.createElement(_reactIntl.FormattedMessage, {
        id: "optional"
      }), ")")), /*#__PURE__*/_react.default.createElement("input", (0, _extends2.default)({}, (0, _utilsHtml.getValidHtmlAttributes)(this.props, 'input'), {
        onChange: this.handleChange,
        id: this.props.id,
        className: (0, _classnames.default)('text-field__input', (_cn = {}, _cn["text-field__input--" + this.props.size] = this.props.size, _cn['text-field__input--invalid'] = this.props.errorMessage, _cn)),
        ref: this.props.forwardedRef,
        "data-key": "text-field"
      })), this.props.errorMessage && /*#__PURE__*/_react.default.createElement(_alerts.ErrorAlert, null, this.props.errorMessage), this.renderInputIcon(), this.renderInfo(), this.renderCharacterCount());
    }
  }]);
  return TextField;
}(_react.default.PureComponent);

exports.TextField = TextField;
TextField.propTypes = {
  className: _propTypes.default.string,
  onChange: _propTypes.default.func,
  id: _propTypes.default.string.isRequired,
  info: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),
  maxLength: _propTypes.default.number,
  suggestedMaxLength: _propTypes.default.number,
  value: _propTypes.default.string,
  characterCountSrOnly: _propTypes.default.bool,
  inputIcon: _propTypes.default.element,
  optional: _propTypes.default.bool,
  label: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node, _propTypes.default.string]).isRequired,
  errorMessage: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node, _propTypes.default.string]),
  size: _propTypes.default.oneOf(['small', 'large', 'extra-large']),
  dataKey: _propTypes.default.string,
  forwardedRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object])
};

var WrappedTextField = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {
  return /*#__PURE__*/_react.default.createElement(TextField, (0, _extends2.default)({}, props, {
    forwardedRef: ref
  }));
});

var _default = WrappedTextField;
exports.default = _default;