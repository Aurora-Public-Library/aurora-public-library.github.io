"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.superagentToObservable = exports.jsonp = exports.isMobileAppRequest = exports.default = exports.createQueryString = void 0;

var _map2 = _interopRequireDefault(require("lodash/map"));

var _rxjs = require("rxjs");

var _superagentJsonp = _interopRequireDefault(require("superagent-jsonp"));

var _superagent = _interopRequireDefault(require("superagent"));

var superagentToObservable = function superagentToObservable(request, abortOnUnsubscribe) {
  if (abortOnUnsubscribe === void 0) {
    abortOnUnsubscribe = true;
  }

  return _rxjs.Observable.create(function (observer) {
    request.end(function (err, response) {
      if (err) {
        observer.error(err);
      }

      if (response) {
        observer.next(response);
        observer.complete();
      }
    });

    if (abortOnUnsubscribe) {
      return function () {
        return request.abort();
      };
    }

    return null;
  });
};
/**
 * Makes a JSONP request and returns an observable
 * @param {string} url - url for the JSONP request (must end with callback=)
 * @return {Observable}
 */


exports.superagentToObservable = superagentToObservable;

var jsonp = function jsonp(url) {
  return superagentToObservable(_superagent.default.get(url).use((0, _superagentJsonp.default)({
    timeout: 10000
  })), false);
};

exports.jsonp = jsonp;

var createQueryString = function createQueryString(obj) {
  return (0, _map2.default)(obj, function (value, key) {
    return key + "=" + encodeURIComponent(value);
  }).join('&');
};

exports.createQueryString = createQueryString;
var MOBILE_APP_NAME = 'BiblioApp';
/**
 * Returns true if the request is from the mobile app.
 *
 * @param {object} request headers
 * @return {boolean}
 */

var isMobileAppRequest = function isMobileAppRequest(headers) {
  if (headers === void 0) {
    headers = {};
  }

  var possibleValues = [headers['x-requested-with'], headers['user-agent']];
  var valuesContainingAppName = possibleValues.filter(function (value) {
    return (value || '').indexOf(MOBILE_APP_NAME) !== -1;
  });
  return valuesContainingAppName.length > 0;
};

exports.isMobileAppRequest = isMobileAppRequest;
var _default = {
  superagentToObservable: superagentToObservable,
  jsonp: jsonp,
  createQueryString: createQueryString,
  isMobileAppRequest: isMobileAppRequest
};
exports.default = _default;